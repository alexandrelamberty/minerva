# Docker Compose file for a multi-service application.
# Defines services for a MySQL instance, API server application, Web application, and Website.

services:
  # TODO: Add nginx service:
  mysql:
    container_name: minerva-database
    image: mysql
    command: mysqld --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
    ports:
      - 3306:3306
  api:
    container_name: minerva-api
    image: alexandrelamberty/minerva-api:master
    restart: always
    # ports:
    #   - '8090:8090'
    environment:
      API_PORT: ${API_PORT}
      DB_PORT: ${DB_PORT}
      DB_SERVER: ${DB_SERVER}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_DATABASE: ${DB_DATABASE}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRE: ${JWT_EXPIRE}
      JWT_ISSUER: ${JWT_ISSUER}
      JWT_AUDIENCE: ${JWT_AUDIENCE}
      OPEN_API_KEY: ${OPEN_API_KEY}
    volumes:
      - media_data:/usr/src/app/public
    depends_on:
      - mysql
  webapp:
    container_name: minerva-web-app
    image: alexandrelamberty/minerva-web-app:master
    restart: always
    # ports:
    #   - '8080:8080'
    environment:
      VITE_API_PORT: ${VITE_API_PORT}
    depends_on:
      - api
  website:
    container_name: minerva-website
    image: alexandrelamberty/minerva-site:master
    restart: always
    # ports:
    #   - '80:80'
    environment:
      NEXT_API_PORT: ${NEXT_API_PORT}
    depends_on:
      - api

volumes:
  media_data: